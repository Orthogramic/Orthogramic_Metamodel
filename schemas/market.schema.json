{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://orthogramic.github.io/Orthogramic_Metamodel/schemas/market.schema.json",
  "title": "Orthogramic Market Domain Schema",
  "description": "Market domain objects definition and relationships",
  "type": "object",
  "required": ["domainInfo", "definitions", "relationships"],
  "properties": {
    "domainInfo": {
      "type": "object",
      "properties": {
        "domainName": {
          "const": "market"
        },
        "domainPrefix": {
          "const": "mkt:"
        },
        "description": {
          "const": "Market domain for managing customer segments, value propositions, campaigns, and channels"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        }
      },
      "required": ["domainName", "domainPrefix", "description", "version"]
    },
    "definitions": {
      "$ref": "#/$defs/marketDefinitions"
    },
    "relationships": {
      "$ref": "#/$defs/marketRelationships"
    },
    "crossDomainRelationships": {
      "$ref": "#/$defs/crossDomainRelationships"
    }
  },
  "$defs": {
    "marketDefinitions": {
      "type": "object",
      "properties": {
        "customerSegment": {
          "type": "object",
          "required": ["id", "name", "status"],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^cs:[a-z0-9-]+$"
            },
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": {
              "type": "string",
              "maxLength": 500
            },
            "category": {
              "type": "string",
              "enum": ["consumer", "business", "government", "hybrid"]
            },
            "targetSize": {
              "type": "integer",
              "minimum": 0
            },
            "demographics": {
              "type": "object",
              "properties": {
                "ageRange": {
                  "type": "object",
                  "properties": {
                    "min": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 150
                    },
                    "max": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 150
                    }
                  }
                },
                "gender": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["male", "female", "other", "all"]
                  }
                },
                "income": {
                  "type": "object",
                  "properties": {
                    "min": {
                      "type": "number",
                      "minimum": 0
                    },
                    "max": {
                      "type": "number",
                      "minimum": 0
                    },
                    "currency": {
                      "type": "string",
                      "pattern": "^[A-Z]{3}$"
                    }
                  }
                },
                "location": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "metrics": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["metricName", "value", "period"],
                "properties": {
                  "metricName": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  },
                  "period": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                }
              }
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "potential", "deprecated"]
            }
          }
        },
        "valueProposition": {
          "type": "object",
          "required": ["id", "name", "status"],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^vp:[a-z0-9-]+$"
            },
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": {
              "type": "string",
              "maxLength": 1000
            },
            "uniqueness": {
              "type": "string",
              "maxLength": 500
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "draft", "deprecated"]
            }
          }
        },
        "campaign": {
          "type": "object",
          "required": ["id", "name", "type", "status", "startDate", "endDate"],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^camp:[a-z0-9-]+$"
            },
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": {
              "type": "string",
              "maxLength": 1000
            },
            "type": {
              "type": "string",
              "enum": ["product_launch", "brand_awareness", "lead_generation", "customer_acquisition", "customer_retention", "seasonal", "event"]
            },
            "goals": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["metric", "target", "unit"],
                "properties": {
                  "metric": {
                    "type": "string"
                  },
                  "target": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  }
                }
              }
            },
            "budget": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "minimum": 0
                },
                "spent": {
                  "type": "number",
                  "minimum": 0
                },
                "currency": {
                  "type": "string",
                  "pattern": "^[A-Z]{3}$"
                }
              }
            },
            "startDate": {
              "type": "string",
              "format": "date"
            },
            "endDate": {
              "type": "string",
              "format": "date"
            },
            "status": {
              "type": "string",
              "enum": ["planned", "active", "paused", "completed", "cancelled"]
            }
          }
        },
        "channel": {
          "type": "object",
          "required": ["id", "name", "type", "status"],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^ch:[a-z0-9-]+$"
            },
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": {
              "type": "string",
              "maxLength": 500
            },
            "type": {
              "type": "string",
              "enum": ["digital", "physical", "hybrid", "direct", "indirect"]
            },
            "subType": {
              "type": "string",
              "enum": ["website", "mobile_app", "social_media", "email", "retail_store", "wholesale", "partnership", "marketplace", "events"]
            },
            "metrics": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["metricName", "value", "period"],
                "properties": {
                  "metricName": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  },
                  "period": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                }
              }
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "planned", "deprecated"]
            }
          }
        }
      },
      "required": ["customerSegment", "valueProposition", "campaign", "channel"]
    },
    "marketRelationships": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["from", "to", "type"],
        "properties": {
          "from": {
            "type": "string",
            "pattern": "^(cs|vp|camp|ch):[a-z0-9-]+$"
          },
          "to": {
            "type": "string",
            "pattern": "^(cs|vp|camp|ch):[a-z0-9-]+$"
          },
          "type": {
            "type": "string",
            "enum": [
              "targets",
              "offers",
              "reaches",
              "delivers",
              "measures",
              "uses",
              "promotes"
            ]
          },
          "metadata": {
            "type": "object",
            "properties": {
              "effectiveness": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              },
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              },
              "confidence": {
                "type": "string",
                "enum": ["high", "medium", "low"]
              }
            }
          }
        }
      }
    },
    "crossDomainRelationships": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["from", "to", "type"],
        "properties": {
          "from": {
            "type": "string",
            "pattern": "^(cs|vp|camp|ch):[a-z0-9-]+$"
          },
          "to": {
            "type": "string",
            "pattern": "^(pr|rd|cap|tc|ip|sec|comp|as|team|role|skill|partner|dt|platform|infra|app|dev|devops|dataops|aiml|cyber|cloud|edge|process|wf|policy|ctrl|dec|bus|proj|port|kpi|metric|risk|audit|ctrl|vuln|threat|incident|compliance|policy|qs|qm|qi|qr|qd|quality_data):[a-z0-9-]+$"
          },
          "type": {
            "type": "string",
            "enum": [
              "purchases",
              "influences",
              "targets",
              "requires",
              "supports",
              "uses",
              "enables",
              "delivers",
              "depends_on",
              "contributes_to",
              "validates",
              "aligns_with",
              "governed_by",
              "secured_by",
              "measured_by",
              "enhanced_by",
              "monitors",
              "tracks",
              "informs",
              "guides",
              "interacts_with",
              "analyzes",
              "optimizes",
              "relates_to",
              "affects",
              "impacts"
            ]
          },
          "metadata": {
            "type": "object",
            "properties": {
              "strength": {
                "type": "string",
                "enum": ["strong", "moderate", "weak"]
              },
              "confidence": {
                "type": "string",
                "enum": ["high", "medium", "low"]
              },
              "impact": {
                "type": "string",
                "enum": ["critical", "high", "medium", "low"]
              },
              "direction": {
                "type": "string",
                "enum": ["unidirectional", "bidirectional"]
              },
              "description": {
                "type": "string",
                "maxLength": 500
              }
            }
          }
        }
      }
    }
  }
}
